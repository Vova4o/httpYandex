// Обработчик HTTP-запросов

// Пример как запустить WEB сервер на GO порт 8080
package main

import (
	"fmt"
	"net/http"
)

// mainHandle - обработчик запросов
// res - ответ сервера - для пытливых умов, это тот самый ответ, который мы получаем в браузере
// req - запрос клиента - запрос может содержать данные, например, данные формы
func mainHandle(res http.ResponseWriter, req *http.Request) {
    fmt.Println("Получен запрос")
}

// main - запускаем сервер
func main() {
	// Выводим в консоль сообщение о запуске сервера
	fmt.Println("Запускаем сервер")

	// HandleFunc - добавляем обработчик запросов
	// первый параметр - путь, по которому будет обрабатываться запрос (в нашем случае корень сайта)
	// второй параметр - функция, которая будет обрабатывать запрос (см. выше)
	http.HandleFunc("/", mainHandle)

	// ListenAndServe возвращает только ошибку, поэтому приравниваем ее к переменной err
	// в случае получения ошибки, обрабатываем ее через панику
	// Если ошибки нет, то сервер запускается и работает
	// Первое значение - адрес, второе - обработчик
	err := http.ListenAndServe(":8080", nil)
	// обработка ошибки
	if err != nil {
		// panic - прерывает работу программы и выводит сообщение об ошибке
		panic(err)
	}
	// Выводим в консоль сообщение о завершении работы сервера
	fmt.Println("Завершаем работу")
}
